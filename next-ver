#!/usr/bin/env bash

set -euo pipefail

NEWVER="$1"

if [ -z "$NEWVER" ]; then
    echo "New version must be passed"
    exit 1
fi


OLDVER=$(git tag -l | grep "^v[0-9]\+\.[0-9]\+\.[0-9]\+" | sort -V | tail -n1)

if ! git diff HEAD --exit-code > /dev/null; then
    echo "Working copy contains changes; please commit them first"
    exit 1
fi

cp README.md README.md.bak
sed "s/${OLDVER}/${NEWVER}/" < README.md > README.md.tmp
mv README.md.tmp README.md

git diff --color-words README.md

asksure() {
  while read -r -n 1 -s answer; do
    if [[ $answer = [YyNn] ]]; then
      [[ $answer = [Yy] ]] && retval=0
      [[ $answer = [Nn] ]] && retval=1
      break
    fi
  done

  echo

  return $retval
}

echo
echo "==="
echo -n "Apply changes (y/n)? "

if asksure; then
  rm README.md.bak

  git commit -m "Release version ${NEWVER}" README.md

  git tag "${NEWVER}"

  git push --tags
else
  echo "Restoring README.md"
  mv README.md.bak README.md
fi
